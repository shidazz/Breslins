//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""InMatch"",
            ""id"": ""b2c289b1-6547-4d59-b836-4c9611c573b2"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""521ee631-2bc7-4bf6-b6a0-d370f2711123"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Swing"",
                    ""type"": ""Value"",
                    ""id"": ""69cdc185-890f-46db-b881-053fc3094236"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Reset Ball"",
                    ""type"": ""Button"",
                    ""id"": ""90dc803b-d855-4c19-ab7c-6cb312dfec41"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spin"",
                    ""type"": ""Value"",
                    ""id"": ""8bfdeedf-1399-42cc-95a1-0361b1cc0b6d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""a0879bd5-044c-4759-ba92-d26ae1485c6a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""LeftStick"",
                    ""id"": ""3832ebe6-006d-4d97-af1f-eeafca44e1a2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""48d1d021-c52a-4add-8cb7-a7e1a7340e0b"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fd7e747a-2e0a-4529-83cd-367df9097912"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5299a8a7-5741-4c29-bd5a-b521ae0dfb85"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""cb7d3c51-25f1-40da-936d-dc04285aa647"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9a39084e-1752-414a-9848-c00a75b8c6de"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""335c2d69-9dc5-485f-926a-f43dcac7bb4a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1d7e9c52-9f68-4bed-b152-abe445d5830e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Buttons"",
                    ""id"": ""8234f921-454c-4a0c-a9b2-2e393bd41a22"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swing"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ee40c1ba-4213-4dff-bb96-00b69739de73"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4590d4ff-d58a-4ad1-81a4-6b86d50e5af7"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Mouse"",
                    ""id"": ""58138ec9-9c6c-4160-bb54-9ab26f61ef70"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swing"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""19ab6590-bb84-4e1b-b371-af3619d180bf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2241fcc9-8cd3-4866-86eb-0eaad7f17ae6"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4a4e2192-f424-43ba-ada0-9bb8414244d8"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset Ball"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c249049f-bbcb-4e3b-9a17-86e47086b99e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset Ball"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Bumpers"",
                    ""id"": ""98b74513-9072-4f96-82f7-12c6d2a004c5"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""f5ba3af1-421e-4c82-a91f-80df41ddaa5c"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""5e1e6870-79e8-46bd-ae0d-e149e558d08c"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Topspin"",
                    ""id"": ""4df7b1ba-aea4-4299-8205-a5fc86e03c74"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""dc5635bb-e702-454b-b302-af9a1fb2ceb5"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""9bf0d1dd-7de0-4a4c-966c-e5eb6195ebee"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""QE"",
                    ""id"": ""0ce42057-be3e-4cb0-92df-94ab15c97853"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""549d29e6-5a4b-41d8-acda-e727daa79410"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""ef4e436b-7f30-4ab4-9a94-cfb95709425b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Topspin"",
                    ""id"": ""c591592e-5947-4ae6-855a-cb85ddb26577"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""e4188c34-0467-4560-b44d-d1d47403b504"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""961ed450-3a95-44f5-89d1-4793af44ef41"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cf0c06c6-66fe-4e3d-b4f4-ceaab2bd9380"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20d5f1ce-0afa-427e-9e0d-5b1e82b198bb"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InMatch
        m_InMatch = asset.FindActionMap("InMatch", throwIfNotFound: true);
        m_InMatch_Movement = m_InMatch.FindAction("Movement", throwIfNotFound: true);
        m_InMatch_Swing = m_InMatch.FindAction("Swing", throwIfNotFound: true);
        m_InMatch_ResetBall = m_InMatch.FindAction("Reset Ball", throwIfNotFound: true);
        m_InMatch_Spin = m_InMatch.FindAction("Spin", throwIfNotFound: true);
        m_InMatch_Pause = m_InMatch.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InMatch
    private readonly InputActionMap m_InMatch;
    private IInMatchActions m_InMatchActionsCallbackInterface;
    private readonly InputAction m_InMatch_Movement;
    private readonly InputAction m_InMatch_Swing;
    private readonly InputAction m_InMatch_ResetBall;
    private readonly InputAction m_InMatch_Spin;
    private readonly InputAction m_InMatch_Pause;
    public struct InMatchActions
    {
        private @PlayerInput m_Wrapper;
        public InMatchActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_InMatch_Movement;
        public InputAction @Swing => m_Wrapper.m_InMatch_Swing;
        public InputAction @ResetBall => m_Wrapper.m_InMatch_ResetBall;
        public InputAction @Spin => m_Wrapper.m_InMatch_Spin;
        public InputAction @Pause => m_Wrapper.m_InMatch_Pause;
        public InputActionMap Get() { return m_Wrapper.m_InMatch; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InMatchActions set) { return set.Get(); }
        public void SetCallbacks(IInMatchActions instance)
        {
            if (m_Wrapper.m_InMatchActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_InMatchActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_InMatchActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_InMatchActionsCallbackInterface.OnMovement;
                @Swing.started -= m_Wrapper.m_InMatchActionsCallbackInterface.OnSwing;
                @Swing.performed -= m_Wrapper.m_InMatchActionsCallbackInterface.OnSwing;
                @Swing.canceled -= m_Wrapper.m_InMatchActionsCallbackInterface.OnSwing;
                @ResetBall.started -= m_Wrapper.m_InMatchActionsCallbackInterface.OnResetBall;
                @ResetBall.performed -= m_Wrapper.m_InMatchActionsCallbackInterface.OnResetBall;
                @ResetBall.canceled -= m_Wrapper.m_InMatchActionsCallbackInterface.OnResetBall;
                @Spin.started -= m_Wrapper.m_InMatchActionsCallbackInterface.OnSpin;
                @Spin.performed -= m_Wrapper.m_InMatchActionsCallbackInterface.OnSpin;
                @Spin.canceled -= m_Wrapper.m_InMatchActionsCallbackInterface.OnSpin;
                @Pause.started -= m_Wrapper.m_InMatchActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_InMatchActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_InMatchActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_InMatchActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Swing.started += instance.OnSwing;
                @Swing.performed += instance.OnSwing;
                @Swing.canceled += instance.OnSwing;
                @ResetBall.started += instance.OnResetBall;
                @ResetBall.performed += instance.OnResetBall;
                @ResetBall.canceled += instance.OnResetBall;
                @Spin.started += instance.OnSpin;
                @Spin.performed += instance.OnSpin;
                @Spin.canceled += instance.OnSpin;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public InMatchActions @InMatch => new InMatchActions(this);
    public interface IInMatchActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnSwing(InputAction.CallbackContext context);
        void OnResetBall(InputAction.CallbackContext context);
        void OnSpin(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
